---
interface Props {
  prompts: string[];
}

const { prompts } = Astro.props;
---

<div class="my-4 p-4 border-s-[0.625rem] rounded-lg border-pink-500 bg-pink-50 dark:bg-pink-900/20 shadow-sm">
  <div class="flex items-start gap-3">
    <img src="/icons/llama.png" alt="Llama Icon" class="w-8 h-8 mt-1" />
    <div class="flex-1">
      <p class="font-bold text-base text-pink-700 dark:text-pink-300 mb-2">Ask That Llama!</p>
      <p class="text-pink-800 dark:text-pink-200 mb-4">
        Try these prompts to explore markdown admonitions in different ways:
      </p>
      <div class="space-y-3">
        {prompts.map((prompt) => (
          <div class="flex items-center justify-between bg-white dark:bg-pink-800/30 p-3 rounded-lg">
            <span class="text-pink-800 dark:text-pink-200">{prompt}</span>
            <button onclick={`copyToClipboard(this, '${prompt}')`} class="text-pink-600 hover:text-pink-700 dark:text-pink-300 dark:hover:text-pink-200 flex items-center gap-2">
              <span class="copy-text">Copy</span>
              <svg class="copy-icon h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" />
                <path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z" />
              </svg>
              <svg class="check-icon h-5 w-5 hidden" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
              </svg>
            </button>
          </div>
        ))}
      </div>
    </div>
  </div>
</div>

<script>
function copyToClipboard(button, text) {
  navigator.clipboard.writeText(text).then(() => {
    const copyText = button.querySelector('.copy-text');
    const copyIcon = button.querySelector('.copy-icon');
    const checkIcon = button.querySelector('.check-icon');
    
    // Show success state
    copyText.textContent = 'Copied!';
    copyIcon.classList.add('hidden');
    checkIcon.classList.remove('hidden');
    
    // Reset after 2 seconds
    setTimeout(() => {
      copyText.textContent = 'Copy';
      copyIcon.classList.remove('hidden');
      checkIcon.classList.add('hidden');
    }, 2000);
  });
}
</script> 