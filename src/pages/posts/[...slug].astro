---
// Astro frontmatter
import { render } from "astro:content";
import { getAllPosts } from "@/data/post";
import PostLayout from "@/layouts/BlogPost.astro";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";

export const getStaticPaths = (async () => {
	const blogEntries = await getAllPosts();
	return blogEntries.map((post) => ({
		params: { slug: post.id },
		props: { post },
	}));
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { post } = Astro.props;
const { Content } = await render(post);
const fallbackReadersCount = Math.floor(Math.random() * 11) + 2;
---

<script define:vars={{ postId: post.id }}>
	window.__POST_ID__ = postId;
</script>

<script>
	let messages = [
		["Read it or regret it.", "Albert Ehh?stein"],
		["Books > Biceps.", "Arnold Shelfzenegger"],
		["Scroll smart.", "Scrollon Musk"],
		["Think faster, read shorter.", "Isaac Meh-ton"],
		["Small reads, big brains.", "Leonardo Nah Vinci"],
		["Be curious, not clueless.", "Mehrie Curie-ous"],
		["Readers gonna rule.", "Barak No-drama"],
		["Tap to evolve.", "Charles Dar-win-sometimes"],
		["Feed the brain, not the algorithm.", "Stephen NotKing"],
		["Why not read?", "William NOPESpeare"],
		["You clicked. Good choice for mankind!", "Neil Thumb-strong"],
		["Scroll less, learn more.", "Steve No-mo Jobs"],
		["Reading is my cardio.", "Taylor Sniffed"],
		["Get lit. Read lit.", "Issac Lit-ton"],
		["Hallucinating... but with confidence.", "Mark Zukerbored"],
		["AI: Because guessing is science now.", "Bill Windows"],
		["Don't measure me, bro.", "Schrodinger"],
		["Make AI Great Again!", "Donald Trump"],
	];

	let currentMessageIndex = 0;
	let loadingDuration = 0;

	function showNextMessage() {
		const messageEl = document.getElementById("loading-quote");
		const authorEl = document.getElementById("loading-author");

		const [quote, author] =
			messages[Math.floor(Math.random() * messages.length)];
		messageEl.textContent = `‚Äú${quote}‚Äù`;
		authorEl.textContent = `‚Äì ${author}`;

		const displayTime = 1000 + quote.length * 60;
		loadingDuration += displayTime;

		if (loadingDuration < 3000) {
			setTimeout(showNextMessage, displayTime);
		}
	}

	window.addEventListener("DOMContentLoaded", () => {
		showNextMessage();
		// Make sure the screen stays for at least 3.5s
		setTimeout(() => {
			document.getElementById("loading-screen").classList.add("fade-out");
		}, 3500);

		setTimeout(() => {
			document.getElementById("loading-screen").style.display = "none";
		}, 4200);
	});
</script>

<style>
	html,
	body {
		overflow: hidden; /* Prevent pinch-out revealing background */
		touch-action: none; /* Optional: disable pinch zoom */
	}

	#loading-screen {
		position: fixed;
		inset: 0;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		backdrop-filter: blur(30px);
		-webkit-backdrop-filter: blur(30px);
		z-index: 9999;
		transition: opacity 0.5s ease-in-out;
		opacity: 1;
		padding: 1rem;
	}

	#loading-screen.fade-out {
		opacity: 0;
		pointer-events: none;
	}
</style>

<!-- Loading overlay -->
<div id="loading-screen">
	<div id="loading-message">
		<div
			id="loading-quote"
			class="italic text-center text-lg dark:text-gray-100 max-w-md mx-auto px-4"
		>
			Entering read mode ü§ì
		</div>
		<div
			id="loading-author"
			class="mt-2 text-sm text-center dark:text-gray-300"
		>
		</div>
	</div>
</div>
<!-- <div class="text-transparent bg-clip-text bg-gradient-to-r from-accent-one to-accent-two font-medium text-center">
    
  </div> -->

<!-- Page layout -->
<PostLayout post={post} data-post-id={post.id}>
	<Content />
</PostLayout>
